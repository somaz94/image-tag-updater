name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
      - '**/*.md'
      - 'charts/**/*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-push-docker:
    name: Build and Push Docker
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5001:5000

    env:
      TEST_TAG: localhost:5001/actions/image-tag-updater:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 10

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory ${{ github.workspace }}

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Build the Container
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.TEST_TAG }}

      - name: Set short sha
        id: vars
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Run the Container
        env:
          TARGET_PATH: charts/somaz/api
          NEW_TAG: ${{ steps.vars.outputs.short_sha }}
          TAG_STRING: tag
          TARGET_VALUES_FILE: dev1
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_USER_NAME: somaz
          GIT_USER_EMAIL: genius5711@gmail.com
          BRANCH: main
          REPO: somaz94/image-tag-updater
          COMMIT_MESSAGE: Update image tag in
        run: |
          docker run \
          --env TARGET_PATH="${{ env.TARGET_PATH}}" \
          --env NEW_TAG="${{ env.NEW_TAG }}" \
          --env TAG_STRING="${{ env.TAG_STRING }}" \
          --env TARGET_VALUES_FILE="${{ env.TARGET_VALUES_FILE }}" \
          --env GITHUB_TOKEN="${{ env.GITHUB_TOKEN }}" \
          --env GIT_USER_NAME="${{ env.GIT_USER_NAME }}" \
          --env GIT_USER_EMAIL="${{ env.GIT_USER_EMAIL }}" \
          --env BRANCH="${{ env.BRANCH }}" \
          --env REPO="${{ env.REPO }}" \
          --env COMMIT_MESSAGE="${{ env.COMMIT_MESSAGE }}" \
          --volume ${{ github.workspace }}:/usr/src \
          --rm ${{ env.TEST_TAG }}
