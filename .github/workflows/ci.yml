name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
      - '**/*.md'
      - 'charts/**/*'
      - 'backup/**/*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-and-push-docker:
    name: Build and Push Docker
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5001:5000

    env:
      TEST_TAG: localhost:5001/actions/image-tag-updater:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 10

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory ${{ github.workspace }}

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Build the Container
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.TEST_TAG }}

      - name: Set short sha
        id: vars
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      # - name: Run the Container
      #   env:
      #     TARGET_PATH: charts/somaz/api
      #     NEW_TAG: ${{ steps.vars.outputs.short_sha }}
      #     TAG_STRING: tag
      #     TARGET_VALUES_FILE: dev2.values.yaml
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GIT_USER_NAME: GitHub Actions
      #     GIT_USER_EMAIL: actions@github.com
      #     BRANCH: main
      #     REPO: somaz94/image-tag-updater
      #     COMMIT_MESSAGE: Update image tag in
      #     DRY_RUN: true
      #   run: |
      #     docker run \
      #     --env TARGET_PATH="${{ env.TARGET_PATH}}" \
      #     --env TARGET_VALUES_FILE="${{ env.TARGET_VALUES_FILE }}" \
      #     --env NEW_TAG="${{ env.NEW_TAG }}" \
      #     --env TAG_STRING="${{ env.TAG_STRING }}" \
      #     --env GITHUB_TOKEN="${{ env.GITHUB_TOKEN }}" \
      #     --env GIT_USER_NAME="${{ env.GIT_USER_NAME }}" \
      #     --env GIT_USER_EMAIL="${{ env.GIT_USER_EMAIL }}" \
      #     --env BRANCH="${{ env.BRANCH }}" \
      #     --env REPO="${{ env.REPO }}" \
      #     --env COMMIT_MESSAGE="${{ env.COMMIT_MESSAGE }}" \
      #     --env DRY_RUN="${{ env.DRY_RUN }}" \
      #     --volume ${{ github.workspace }}:/usr/src \
      #     --rm ${{ env.TEST_TAG }}
  
  image-tag-updater-matrix-test:
    needs: build-and-push-docker
    name: Matrix Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Single File Update"
            target_values_file: "qa1.values.yaml"
            file_pattern: ""
            dry_run: "false"
            debug: "false"
            branch: "test"

          # - name: "Pattern Match Update"
          #   target_values_file: ""
          #   file_pattern: "dev*.values.yaml"
          #   dry_run: "false"
          #   debug: "false"
          #   branch: "test"

          - name: "Dry Run Single File"
            target_values_file: "dev2.values.yaml"
            file_pattern: ""
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Dry Run Pattern Match"
            target_values_file: ""
            file_pattern: "dev*.values.yaml"
            dry_run: "true"
            debug: "false"
            branch: "main"

          # - name: "Debug Mode Single File"
          #   target_values_file: "dev2.values.yaml"
          #   file_pattern: ""
          #   dry_run: "false"
          #   debug: "true"
          #   branch: "test"

          - name: "Debug Mode Pattern Match"
            target_values_file: ""
            file_pattern: "dev*.values.yaml"
            dry_run: "false"
            debug: "true"
            branch: "test"

          - name: "Tag Format Validation Test"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "v1.0.0-valid"
            dry_run: "true"
            debug: "true"
            branch: "main"
            
          - name: "Tag String Validation Test"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "v1.0.0"
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Invalid Tag Format Test (Expected to Fail)"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "@invalid@tag"
            continue_on_error: true
            dry_run: "true"
            debug: "true"
            branch: "main"

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 10

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory ${{ github.workspace }}

      - name: Set short sha
        id: vars
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: ${{ matrix.name }}
        uses: ./
        continue-on-error: ${{ matrix.continue_on_error || false }}
        with:
          target_path: charts/somaz/api
          target_values_file: ${{ matrix.target_values_file }}
          file_pattern: ${{ matrix.file_pattern }}
          new_tag: ${{ matrix.new_tag || steps.vars.outputs.short_sha }}
          branch: ${{ matrix.branch }}
          github_token: ${{ secrets.PAT }}
          git_user_name: GitHub Actions
          git_user_email: actions@github.com
          repo: somaz94/image-tag-updater
          tag_string: ${{ matrix.tag_string || 'tag' }}
          dry_run: ${{ matrix.dry_run }}
          debug: ${{ matrix.debug }}