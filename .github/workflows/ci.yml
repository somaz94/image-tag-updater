name: Continuous Integration

on:
  pull_request:
  push:
    branches:
      - main
    paths-ignore:
      - '.github/workflows/**'
      - '**/*.md'
      - 'charts/**/*'
      - 'backup/**/*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  test-local:
    name: Run Local Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.14'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: python3 tests/test_local.py

      - name: Run new features tests
        run: python3 tests/test_new_features.py

      - name: Run conditional and summary tests
        run: python3 tests/test_conditional_summary.py

  build-and-push-docker:
    name: Build and Push Docker
    needs: test-local
    runs-on: ubuntu-latest
    services:
      registry:
        image: registry:2
        ports:
          - 5001:5000

    env:
      TEST_TAG: localhost:5001/actions/image-tag-updater:latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 10

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory ${{ github.workspace }}

      - name: Setup Docker BuildX
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver-opts: network=host

      - name: Build the Container
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.TEST_TAG }}

      - name: Set short sha
        id: vars
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      # - name: Run the Container
      #   env:
      #     TARGET_PATH: charts/somaz/api
      #     NEW_TAG: ${{ steps.vars.outputs.short_sha }}
      #     TAG_STRING: tag
      #     TARGET_VALUES_FILE: dev2.values.yaml
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     GIT_USER_NAME: GitHub Actions
      #     GIT_USER_EMAIL: actions@github.com
      #     BRANCH: main
      #     REPO: somaz94/image-tag-updater
      #     COMMIT_MESSAGE: Update image tag in
      #     DRY_RUN: true
      #   run: |
      #     docker run \
      #     --env TARGET_PATH="${{ env.TARGET_PATH}}" \
      #     --env TARGET_VALUES_FILE="${{ env.TARGET_VALUES_FILE }}" \
      #     --env NEW_TAG="${{ env.NEW_TAG }}" \
      #     --env TAG_STRING="${{ env.TAG_STRING }}" \
      #     --env GITHUB_TOKEN="${{ env.GITHUB_TOKEN }}" \
      #     --env GIT_USER_NAME="${{ env.GIT_USER_NAME }}" \
      #     --env GIT_USER_EMAIL="${{ env.GIT_USER_EMAIL }}" \
      #     --env BRANCH="${{ env.BRANCH }}" \
      #     --env REPO="${{ env.REPO }}" \
      #     --env COMMIT_MESSAGE="${{ env.COMMIT_MESSAGE }}" \
      #     --env DRY_RUN="${{ env.DRY_RUN }}" \
      #     --volume ${{ github.workspace }}:/usr/src \
      #     --rm ${{ env.TEST_TAG }}
  
  image-tag-updater-matrix-test:
    needs: build-and-push-docker
    name: Matrix Test
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Single File Update"
            target_values_file: "dev*.values.yaml"
            file_pattern: ""
            dry_run: "false"
            debug: "false"
            branch: "test-single-file"

          - name: "Dry Run Single File"
            target_values_file: "dev2.values.yaml"
            file_pattern: ""
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Dry Run Pattern Match"
            target_values_file: ""
            file_pattern: "dev*.values.yaml"
            dry_run: "true"
            debug: "false"
            branch: "main"

          - name: "Debug Mode Pattern Match"
            target_values_file: ""
            file_pattern: "dev*.values.yaml"
            dry_run: "false"
            debug: "true"
            branch: "test-debug-pattern"

          - name: "Tag Format Validation Test"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "v1.0.0-valid"
            dry_run: "true"
            debug: "true"
            branch: "main"
            
          - name: "Tag String Validation Test"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "v1.0.0"
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Invalid Tag Format Test (Expected to Fail)"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "@invalid@tag"
            continue_on_error: true
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Tag Prefix Test"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "1.2.3"
            tag_prefix: "v"
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Tag Suffix Test"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "latest"
            tag_suffix: "-prod"
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Tag Prefix and Suffix Test"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "1.2.3"
            tag_prefix: "release-"
            tag_suffix: "-staging"
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Conditional Update - update_if_contains"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "v2.0.0"
            update_if_contains: "327"    # Current tag contains this
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Conditional Update - skip_if_contains"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "v2.0.0"
            skip_if_contains: "999"      # Current tag doesn't contain this, so will update
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Summary File Test"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "v1.2.3"
            summary_file: ".github/test-updates.json"
            dry_run: "true"
            debug: "true"
            branch: "main"

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 10

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory ${{ github.workspace }}

      - name: Set short sha
        id: vars
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: ${{ matrix.name }}
        id: update-tag
        uses: ./
        continue-on-error: ${{ matrix.continue_on_error || false }}
        with:
          target_path: charts/somaz/api
          target_values_file: ${{ matrix.target_values_file }}
          file_pattern: ${{ matrix.file_pattern }}
          new_tag: ${{ matrix.new_tag || steps.vars.outputs.short_sha }}
          branch: ${{ matrix.branch }}
          github_token: ${{ secrets.PAT }}
          git_user_name: GitHub Actions
          git_user_email: actions@github.com
          repo: somaz94/image-tag-updater
          tag_string: ${{ matrix.tag_string || 'tag' }}
          tag_prefix: ${{ matrix.tag_prefix || '' }}
          tag_suffix: ${{ matrix.tag_suffix || '' }}
          update_if_contains: ${{ matrix.update_if_contains || '' }}
          skip_if_contains: ${{ matrix.skip_if_contains || '' }}
          summary_file: ${{ matrix.summary_file || '' }}
          dry_run: ${{ matrix.dry_run }}
          debug: ${{ matrix.debug }}

      - name: Display Outputs
        if: always()
        run: |
          echo "Files Updated: ${{ steps.update-tag.outputs.files_updated }}"
          echo "Updated Files: ${{ steps.update-tag.outputs.updated_files }}"
          echo "Old Tags: ${{ steps.update-tag.outputs.old_tags }}"
          echo "New Tag Applied: ${{ steps.update-tag.outputs.new_tag_applied }}"
          echo "Changes Made: ${{ steps.update-tag.outputs.changes_made }}"
          echo "Commit SHA: ${{ steps.update-tag.outputs.commit_sha_short }}"
          echo "Full Commit SHA: ${{ steps.update-tag.outputs.commit_sha }}"