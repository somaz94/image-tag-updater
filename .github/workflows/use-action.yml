name: Example Workflow using Image Tag Updater

on:
  workflow_dispatch:
    inputs:
      run:
        description: 'workflow run'
        required: true
        default: 'true'
  workflow_run:
    workflows: ["Generate changelog"]  
    types:
      - completed

permissions:
  contents: write

jobs:
  test-local:
    name: Run Local Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.14'

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: python3 tests/test_local.py

  action-module-matrix-test:
    name: Matrix Test
    needs: test-local
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "Single File Update"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            dry_run: "false"
            debug: "false"
            branch: "test-single-file"

          # - name: "Pattern Match Update"
          #   target_values_file: ""
          #   file_pattern: "dev*.values.yaml"
          #   dry_run: "false"
          #   debug: "false"
          #   branch: "test-pattern-match"

          - name: "Dry Run Single File"
            target_values_file: "dev2.values.yaml"
            file_pattern: ""
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Dry Run Pattern Match"
            target_values_file: ""
            file_pattern: "dev*.values.yaml"
            dry_run: "true"
            debug: "false"
            branch: "main"

          # - name: "Debug Mode Single File"
          #   target_values_file: "dev2.values.yaml"
          #   file_pattern: ""
          #   dry_run: "false"
          #   debug: "true"
          #   branch: "test-debug-single"

          - name: "Debug Mode Pattern Match"
            target_values_file: ""
            file_pattern: "dev*.values.yaml"
            dry_run: "false"
            debug: "true"
            branch: "test-debug-pattern"

          - name: "Tag Format Validation Test"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "v1.0.0-valid"
            dry_run: "true"
            debug: "true"
            branch: "main"
            
          - name: "Tag String Validation Test"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "v1.0.0"
            dry_run: "true"
            debug: "true"
            branch: "main"

          - name: "Invalid Tag Format Test (Expected to Fail)"
            target_values_file: "dev1.values.yaml"
            file_pattern: ""
            tag_string: "tag"
            new_tag: "@invalid@tag"
            continue_on_error: true
            dry_run: "true"
            debug: "true"
            branch: "main"

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 10

      - name: Configure Git Safe Directory
        run: git config --global --add safe.directory ${{ github.workspace }}

      - name: Set short sha
        id: vars
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: ${{ matrix.name }}
        uses: ./
        continue-on-error: ${{ matrix.continue_on_error || false }}
        with:
          target_path: charts/somaz/api
          target_values_file: ${{ matrix.target_values_file }}
          file_pattern: ${{ matrix.file_pattern }}
          new_tag: ${{ matrix.new_tag || steps.vars.outputs.short_sha }}
          branch: ${{ matrix.branch }}
          github_token: ${{ secrets.PAT }}
          git_user_name: GitHub Actions
          git_user_email: actions@github.com
          repo: somaz94/image-tag-updater
          tag_string: ${{ matrix.tag_string || 'tag' }}
          dry_run: ${{ matrix.dry_run }}
          debug: ${{ matrix.debug }}
